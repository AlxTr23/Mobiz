/*
 * FDPClient Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge by LiquidBounce.
 * https://github.com/SkidderMC/FDPClient/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import me.zywl.fdpclient.event.EventTarget
import me.zywl.fdpclient.event.PacketEvent
import me.zywl.fdpclient.event.UpdateEvent
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.utils.PacketUtils
import me.zywl.fdpclient.value.impl.BoolValue
import me.zywl.fdpclient.value.impl.IntegerValue
import net.minecraft.client.gui.GuiGameOver
import net.minecraft.network.Packet
import net.minecraft.network.play.INetHandlerPlayClient
import net.minecraft.network.play.server.S23PacketBlockChange
import java.util.concurrent.LinkedBlockingQueue

@ModuleInfo(name = "GhostMode", category = ModuleCategory.EXPLOIT)
object GhostMode : Module() {

    private val ghostModeValue = BoolValue("GhostMode", true)
    private val ghostBlockValue = BoolValue("GhostBlock", true)

    private val delay = IntegerValue("Duration", 1000, 0, 3000).displayable { ghostBlockValue.get() }

    private val packets = LinkedBlockingQueue<Packet<INetHandlerPlayClient>>()
    private val times = ArrayList<Long>()

    private var isGhost = false

    override fun onEnable() {
        if (ghostBlockValue.get()) {
            packets.clear()
            times.clear()
        }
    }

    @EventTarget
    fun onPacket(event: PacketEvent) {
        if (ghostBlockValue.get()) {
            val packet = event.packet
            if (packet is S23PacketBlockChange) {
                event.cancelEvent()
                times.add(System.currentTimeMillis())
                packets.add(packet as Packet<INetHandlerPlayClient>)
            }
        }
    }
    @EventTarget
    fun onUpdate(event: UpdateEvent) {
        if (ghostModeValue.get()) {
        if (mc.currentScreen is GuiGameOver) {
            mc.displayGuiScreen(null)
            mc.thePlayer.isDead = false
            mc.thePlayer.health = 20F
            mc.thePlayer.setPositionAndUpdate(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ)
            isGhost = true

            chat("Â§bYou are now a god mode!")
            }
        }
        if (ghostBlockValue.get()) {
        while (times.first() < System.currentTimeMillis() - delay.get().toLong()) {
            PacketUtils.handlePacket(packets.take() as Packet<INetHandlerPlayClient?>)
            times.remove(times.first())
            }
        }
    }
    override fun onDisable() {
        if (ghostModeValue.get()) {
            if (isGhost) {
                mc.thePlayer.respawnPlayer()
                isGhost = false
            }
        }
        if (ghostBlockValue.get()) {
            while (!packets.isEmpty()) {
                PacketUtils.handlePacket(packets.take() as Packet<INetHandlerPlayClient?>)
            }
            times.clear()
        }
    }
}