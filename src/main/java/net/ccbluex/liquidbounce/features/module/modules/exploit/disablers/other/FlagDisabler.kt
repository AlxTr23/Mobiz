/*
 * FDPClient Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge by LiquidBounce.
 * https://github.com/SkidderMC/FDPClient/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.other

import me.zywl.fdpclient.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.utils.PacketUtils
import me.zywl.fdpclient.value.impl.BoolValue
import me.zywl.fdpclient.value.impl.IntegerValue
import me.zywl.fdpclient.value.impl.ListValue
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.server.S08PacketPlayerPosLook
import kotlin.math.sqrt

class FlagDisabler : DisablerMode("Flag") {

    private val flagMode = ListValue("Flag-Mode", arrayOf("Edit", "Packet"), "Edit")
    private val flagTick = IntegerValue("Flag-TickDelay", 25, 1, 200)
    private val flagSilent = BoolValue("Flag-SilentMode", false)

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is C03PacketPlayer && flagMode.get().equals(
                "edit",
                true
            ) && mc.thePlayer.ticksExisted > 0 && mc.thePlayer.ticksExisted % flagTick.get() == 0
        ) {
            packet.isMoving = false
            packet.onGround = false
            packet.y = -0.08

            disabler.debugMessage("flagged")
        }
        if (packet is S08PacketPlayerPosLook && flagSilent.get()) {
            if (mc.thePlayer == null || mc.thePlayer.ticksExisted <= 0) return

            val x = packet.getX() - mc.thePlayer.posX
            val y = packet.getY() - mc.thePlayer.posY
            val z = packet.getZ() - mc.thePlayer.posZ
            val diff = sqrt(x * x + y * y + z * z)
            if (diff <= 8) {
                event.cancelEvent()
                PacketUtils.sendPacketNoEvent(
                    C03PacketPlayer.C06PacketPlayerPosLook(
                        packet.getX(),
                        packet.getY(),
                        packet.getZ(),
                        packet.getYaw(),
                        packet.getPitch(),
                        true
                    )
                )

                disabler.debugMessage("silent s08 accept")
            }
        }
    }
}